image: node:18  # Use Node.js image

stages:
  - checkout
  - build_frontend
  - build_backend
  - deploy

variables:
  FRONT_DIR: "frontend"
  BACK_DIR: "back"
  COMPOSE_FILE: "docker-compose.yml"

# Checkout code
checkout_code:
  stage: checkout
  script:
    - echo "📥 Checking out the project..."
    - echo "Code is already checked out by GitLab Runner."

# Build Angular Frontend
build_angular_frontend:
  stage: build_frontend
  script:
    - echo "📦 Installing dependencies and building Angular app..."
    - cd $FRONT_DIR
    - npm install --legacy-peer-deps
    - npm run build -- --configuration=production
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 1 week
  cache:
    paths:
      - frontend/node_modules/

# Build Backend Docker Image
build_backend:
  stage: build_backend
  script:
    - echo "🔧 Building Docker image for the Spring Boot app..."
    - cd $BACK_DIR
    - docker build -t your-backend-image-name .  # Build the backend Docker image using the provided Dockerfile
  artifacts:
    paths:
      - back/target/*.jar  # Optional: Keep track of the JAR if necessary
    expire_in: 1 week

# Deploy with Docker Compose
docker_compose_up:
  stage: deploy
  script:
    - echo "🐳 Stopping existing containers (if any)..."
    - sudo docker-compose -f $COMPOSE_FILE down || true
    - echo "🐳 Building Docker images..."
    - sudo docker-compose -f $COMPOSE_FILE build
    - echo "🐳 Starting containers..."
    - sudo docker-compose -f $COMPOSE_FILE up -d
  when: on_success
